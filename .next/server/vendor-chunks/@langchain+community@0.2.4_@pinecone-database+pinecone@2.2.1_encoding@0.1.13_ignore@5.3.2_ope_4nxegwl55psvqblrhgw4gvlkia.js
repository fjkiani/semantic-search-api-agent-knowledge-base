"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia";
exports.ids = ["vendor-chunks/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/dist/document_loaders/fs/pdf.js":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/dist/document_loaders/fs/pdf.js ***!
  \***********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PDFLoader: () => (/* binding */ PDFLoader)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_documents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/documents */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.2.4_openai@4.71.1_encoding@0.1.13_zod@3.23.8_/node_modules/@langchain/core/documents.js\");\n/* harmony import */ var langchain_document_loaders_fs_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! langchain/document_loaders/fs/buffer */ \"(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/document_loaders/fs/buffer.js\");\n\n\n/**\n * A class that extends the `BufferLoader` class. It represents a document\n * loader that loads documents from PDF files.\n * @example\n * ```typescript\n * const loader = new PDFLoader(\"path/to/bitcoin.pdf\");\n * const docs = await loader.load();\n * console.log({ docs });\n * ```\n */\nclass PDFLoader extends langchain_document_loaders_fs_buffer__WEBPACK_IMPORTED_MODULE_1__.BufferLoader {\n    constructor(filePathOrBlob, { splitPages = true, pdfjs = PDFLoaderImports, parsedItemSeparator = \"\", } = {}) {\n        super(filePathOrBlob);\n        Object.defineProperty(this, \"splitPages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"pdfjs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parsedItemSeparator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.splitPages = splitPages;\n        this.pdfjs = pdfjs;\n        this.parsedItemSeparator = parsedItemSeparator;\n    }\n    /**\n     * A method that takes a `raw` buffer and `metadata` as parameters and\n     * returns a promise that resolves to an array of `Document` instances. It\n     * uses the `getDocument` function from the PDF.js library to load the PDF\n     * from the buffer. It then iterates over each page of the PDF, retrieves\n     * the text content using the `getTextContent` method, and joins the text\n     * items to form the page content. It creates a new `Document` instance\n     * for each page with the extracted text content and metadata, and adds it\n     * to the `documents` array. If `splitPages` is `true`, it returns the\n     * array of `Document` instances. Otherwise, if there are no documents, it\n     * returns an empty array. Otherwise, it concatenates the page content of\n     * all documents and creates a single `Document` instance with the\n     * concatenated content.\n     * @param raw The buffer to be parsed.\n     * @param metadata The metadata of the document.\n     * @returns A promise that resolves to an array of `Document` instances.\n     */\n    async parse(raw, metadata) {\n        const { getDocument, version } = await this.pdfjs();\n        const pdf = await getDocument({\n            data: new Uint8Array(raw.buffer),\n            useWorkerFetch: false,\n            isEvalSupported: false,\n            useSystemFonts: true,\n        }).promise;\n        const meta = await pdf.getMetadata().catch(() => null);\n        const documents = [];\n        for (let i = 1; i <= pdf.numPages; i += 1) {\n            const page = await pdf.getPage(i);\n            const content = await page.getTextContent();\n            if (content.items.length === 0) {\n                continue;\n            }\n            // Eliminate excessive newlines\n            // Source: https://github.com/albertcui/pdf-parse/blob/7086fc1cc9058545cdf41dd0646d6ae5832c7107/lib/pdf-parse.js#L16\n            let lastY;\n            const textItems = [];\n            for (const item of content.items) {\n                if (\"str\" in item) {\n                    if (lastY === item.transform[5] || !lastY) {\n                        textItems.push(item.str);\n                    }\n                    else {\n                        textItems.push(`\\n${item.str}`);\n                    }\n                    // eslint-disable-next-line prefer-destructuring\n                    lastY = item.transform[5];\n                }\n            }\n            const text = textItems.join(this.parsedItemSeparator);\n            documents.push(new _langchain_core_documents__WEBPACK_IMPORTED_MODULE_0__.Document({\n                pageContent: text,\n                metadata: {\n                    ...metadata,\n                    pdf: {\n                        version,\n                        info: meta?.info,\n                        metadata: meta?.metadata,\n                        totalPages: pdf.numPages,\n                    },\n                    loc: {\n                        pageNumber: i,\n                    },\n                },\n            }));\n        }\n        if (this.splitPages) {\n            return documents;\n        }\n        if (documents.length === 0) {\n            return [];\n        }\n        return [\n            new _langchain_core_documents__WEBPACK_IMPORTED_MODULE_0__.Document({\n                pageContent: documents.map((doc) => doc.pageContent).join(\"\\n\\n\"),\n                metadata: {\n                    ...metadata,\n                    pdf: {\n                        version,\n                        info: meta?.info,\n                        metadata: meta?.metadata,\n                        totalPages: pdf.numPages,\n                    },\n                },\n            }),\n        ];\n    }\n}\nasync function PDFLoaderImports() {\n    try {\n        const { default: mod } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/pdf-parse@1.1.1\").then(__webpack_require__.t.bind(__webpack_require__, /*! pdf-parse/lib/pdf.js/v1.10.100/build/pdf.js */ \"(rsc)/./node_modules/.pnpm/pdf-parse@1.1.1/node_modules/pdf-parse/lib/pdf.js/v1.10.100/build/pdf.js\", 19));\n        const { getDocument, version } = mod;\n        return { getDocument, version };\n    }\n    catch (e) {\n        console.error(e);\n        throw new Error(\"Failed to load pdf-parse. Please install it with eg. `npm install pdf-parse`.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/dist/document_loaders/fs/pdf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/dist/embeddings/voyage.js":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/dist/embeddings/voyage.js ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VoyageEmbeddings: () => (/* binding */ VoyageEmbeddings)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/utils/env */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.2.4_openai@4.71.1_encoding@0.1.13_zod@3.23.8_/node_modules/@langchain/core/utils/env.js\");\n/* harmony import */ var _langchain_core_embeddings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/embeddings */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.2.4_openai@4.71.1_encoding@0.1.13_zod@3.23.8_/node_modules/@langchain/core/embeddings.js\");\n/* harmony import */ var _langchain_core_utils_chunk_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/utils/chunk_array */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.2.4_openai@4.71.1_encoding@0.1.13_zod@3.23.8_/node_modules/@langchain/core/utils/chunk_array.js\");\n\n\n\n/**\n * A class for generating embeddings using the Voyage AI API.\n */\nclass VoyageEmbeddings extends _langchain_core_embeddings__WEBPACK_IMPORTED_MODULE_1__.Embeddings {\n    /**\n     * Constructor for the VoyageEmbeddings class.\n     * @param fields - An optional object with properties to configure the instance.\n     */\n    constructor(fields) {\n        const fieldsWithDefaults = { ...fields };\n        super(fieldsWithDefaults);\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"voyage-01\"\n        });\n        Object.defineProperty(this, \"batchSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 8\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"basePath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"https://api.voyageai.com/v1\"\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const apiKey = fieldsWithDefaults?.apiKey || (0,_langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_0__.getEnvironmentVariable)(\"VOYAGEAI_API_KEY\");\n        if (!apiKey) {\n            throw new Error(\"Voyage AI API key not found\");\n        }\n        this.modelName = fieldsWithDefaults?.modelName ?? this.modelName;\n        this.batchSize = fieldsWithDefaults?.batchSize ?? this.batchSize;\n        this.apiKey = apiKey;\n        this.apiUrl = `${this.basePath}/embeddings`;\n        this.inputType = fieldsWithDefaults?.inputType;\n    }\n    /**\n     * Generates embeddings for an array of texts.\n     * @param texts - An array of strings to generate embeddings for.\n     * @returns A Promise that resolves to an array of embeddings.\n     */\n    async embedDocuments(texts) {\n        const batches = (0,_langchain_core_utils_chunk_array__WEBPACK_IMPORTED_MODULE_2__.chunkArray)(texts, this.batchSize);\n        const batchRequests = batches.map((batch) => this.embeddingWithRetry({\n            model: this.modelName,\n            input: batch,\n            input_type: this.inputType,\n        }));\n        const batchResponses = await Promise.all(batchRequests);\n        const embeddings = [];\n        for (let i = 0; i < batchResponses.length; i += 1) {\n            const batch = batches[i];\n            const { data: batchResponse } = batchResponses[i];\n            for (let j = 0; j < batch.length; j += 1) {\n                embeddings.push(batchResponse[j].embedding);\n            }\n        }\n        return embeddings;\n    }\n    /**\n     * Generates an embedding for a single text.\n     * @param text - A string to generate an embedding for.\n     * @returns A Promise that resolves to an array of numbers representing the embedding.\n     */\n    async embedQuery(text) {\n        const { data } = await this.embeddingWithRetry({\n            model: this.modelName,\n            input: text,\n            input_type: this.inputType,\n        });\n        return data[0].embedding;\n    }\n    /**\n     * Makes a request to the Voyage AI API to generate embeddings for an array of texts.\n     * @param request - An object with properties to configure the request.\n     * @returns A Promise that resolves to the response from the Voyage AI API.\n     */\n    async embeddingWithRetry(request) {\n        const makeCompletionRequest = async () => {\n            const url = `${this.apiUrl}`;\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${this.apiKey}`,\n                    ...this.headers,\n                },\n                body: JSON.stringify(request),\n            });\n            const json = await response.json();\n            return json;\n        };\n        return this.caller.call(makeCompletionRequest);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitjb21tdW5pdHlAMC4yLjRfQHBpbmVjb25lLWRhdGFiYXNlK3BpbmVjb25lQDIuMi4xX2VuY29kaW5nQDAuMS4xM19pZ25vcmVANS4zLjJfb3BlXzRueGVnd2w1NXBzdnFibHJoZ3c0Z3Zsa2lhL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvbW11bml0eS9kaXN0L2VtYmVkZGluZ3Mvdm95YWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUU7QUFDWDtBQUNPO0FBQy9EO0FBQ0E7QUFDQTtBQUNPLCtCQUErQixrRUFBVTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxxREFBcUQsaUZBQXNCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixjQUFjO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNkVBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHdCQUF3QiwyQkFBMkI7QUFDbkQ7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDLDRCQUE0QixrQkFBa0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsWUFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxZQUFZO0FBQ3pEO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZ2FsLXNlbWFudGljLXNlYXJjaC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2NvbW11bml0eUAwLjIuNF9AcGluZWNvbmUtZGF0YWJhc2UrcGluZWNvbmVAMi4yLjFfZW5jb2RpbmdAMC4xLjEzX2lnbm9yZUA1LjMuMl9vcGVfNG54ZWd3bDU1cHN2cWJscmhndzRndmxraWEvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29tbXVuaXR5L2Rpc3QvZW1iZWRkaW5ncy92b3lhZ2UuanM/ZGIxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFbnZpcm9ubWVudFZhcmlhYmxlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS91dGlscy9lbnZcIjtcbmltcG9ydCB7IEVtYmVkZGluZ3MgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL2VtYmVkZGluZ3NcIjtcbmltcG9ydCB7IGNodW5rQXJyYXkgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3V0aWxzL2NodW5rX2FycmF5XCI7XG4vKipcbiAqIEEgY2xhc3MgZm9yIGdlbmVyYXRpbmcgZW1iZWRkaW5ncyB1c2luZyB0aGUgVm95YWdlIEFJIEFQSS5cbiAqL1xuZXhwb3J0IGNsYXNzIFZveWFnZUVtYmVkZGluZ3MgZXh0ZW5kcyBFbWJlZGRpbmdzIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RvciBmb3IgdGhlIFZveWFnZUVtYmVkZGluZ3MgY2xhc3MuXG4gICAgICogQHBhcmFtIGZpZWxkcyAtIEFuIG9wdGlvbmFsIG9iamVjdCB3aXRoIHByb3BlcnRpZXMgdG8gY29uZmlndXJlIHRoZSBpbnN0YW5jZS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgY29uc3QgZmllbGRzV2l0aERlZmF1bHRzID0geyAuLi5maWVsZHMgfTtcbiAgICAgICAgc3VwZXIoZmllbGRzV2l0aERlZmF1bHRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibW9kZWxOYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcInZveWFnZS0wMVwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJiYXRjaFNpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDhcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFwaUtleVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJiYXNlUGF0aFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJodHRwczovL2FwaS52b3lhZ2VhaS5jb20vdjFcIlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiYXBpVXJsXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImhlYWRlcnNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5wdXRUeXBlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGFwaUtleSA9IGZpZWxkc1dpdGhEZWZhdWx0cz8uYXBpS2V5IHx8IGdldEVudmlyb25tZW50VmFyaWFibGUoXCJWT1lBR0VBSV9BUElfS0VZXCIpO1xuICAgICAgICBpZiAoIWFwaUtleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVm95YWdlIEFJIEFQSSBrZXkgbm90IGZvdW5kXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubW9kZWxOYW1lID0gZmllbGRzV2l0aERlZmF1bHRzPy5tb2RlbE5hbWUgPz8gdGhpcy5tb2RlbE5hbWU7XG4gICAgICAgIHRoaXMuYmF0Y2hTaXplID0gZmllbGRzV2l0aERlZmF1bHRzPy5iYXRjaFNpemUgPz8gdGhpcy5iYXRjaFNpemU7XG4gICAgICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICAgICAgICB0aGlzLmFwaVVybCA9IGAke3RoaXMuYmFzZVBhdGh9L2VtYmVkZGluZ3NgO1xuICAgICAgICB0aGlzLmlucHV0VHlwZSA9IGZpZWxkc1dpdGhEZWZhdWx0cz8uaW5wdXRUeXBlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgZW1iZWRkaW5ncyBmb3IgYW4gYXJyYXkgb2YgdGV4dHMuXG4gICAgICogQHBhcmFtIHRleHRzIC0gQW4gYXJyYXkgb2Ygc3RyaW5ncyB0byBnZW5lcmF0ZSBlbWJlZGRpbmdzIGZvci5cbiAgICAgKiBAcmV0dXJucyBBIFByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhbiBhcnJheSBvZiBlbWJlZGRpbmdzLlxuICAgICAqL1xuICAgIGFzeW5jIGVtYmVkRG9jdW1lbnRzKHRleHRzKSB7XG4gICAgICAgIGNvbnN0IGJhdGNoZXMgPSBjaHVua0FycmF5KHRleHRzLCB0aGlzLmJhdGNoU2l6ZSk7XG4gICAgICAgIGNvbnN0IGJhdGNoUmVxdWVzdHMgPSBiYXRjaGVzLm1hcCgoYmF0Y2gpID0+IHRoaXMuZW1iZWRkaW5nV2l0aFJldHJ5KHtcbiAgICAgICAgICAgIG1vZGVsOiB0aGlzLm1vZGVsTmFtZSxcbiAgICAgICAgICAgIGlucHV0OiBiYXRjaCxcbiAgICAgICAgICAgIGlucHV0X3R5cGU6IHRoaXMuaW5wdXRUeXBlLFxuICAgICAgICB9KSk7XG4gICAgICAgIGNvbnN0IGJhdGNoUmVzcG9uc2VzID0gYXdhaXQgUHJvbWlzZS5hbGwoYmF0Y2hSZXF1ZXN0cyk7XG4gICAgICAgIGNvbnN0IGVtYmVkZGluZ3MgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBiYXRjaFJlc3BvbnNlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgY29uc3QgYmF0Y2ggPSBiYXRjaGVzW2ldO1xuICAgICAgICAgICAgY29uc3QgeyBkYXRhOiBiYXRjaFJlc3BvbnNlIH0gPSBiYXRjaFJlc3BvbnNlc1tpXTtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgYmF0Y2gubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgICAgICAgICBlbWJlZGRpbmdzLnB1c2goYmF0Y2hSZXNwb25zZVtqXS5lbWJlZGRpbmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbWJlZGRpbmdzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgYW4gZW1iZWRkaW5nIGZvciBhIHNpbmdsZSB0ZXh0LlxuICAgICAqIEBwYXJhbSB0ZXh0IC0gQSBzdHJpbmcgdG8gZ2VuZXJhdGUgYW4gZW1iZWRkaW5nIGZvci5cbiAgICAgKiBAcmV0dXJucyBBIFByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhbiBhcnJheSBvZiBudW1iZXJzIHJlcHJlc2VudGluZyB0aGUgZW1iZWRkaW5nLlxuICAgICAqL1xuICAgIGFzeW5jIGVtYmVkUXVlcnkodGV4dCkge1xuICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHRoaXMuZW1iZWRkaW5nV2l0aFJldHJ5KHtcbiAgICAgICAgICAgIG1vZGVsOiB0aGlzLm1vZGVsTmFtZSxcbiAgICAgICAgICAgIGlucHV0OiB0ZXh0LFxuICAgICAgICAgICAgaW5wdXRfdHlwZTogdGhpcy5pbnB1dFR5cGUsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGF0YVswXS5lbWJlZGRpbmc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ha2VzIGEgcmVxdWVzdCB0byB0aGUgVm95YWdlIEFJIEFQSSB0byBnZW5lcmF0ZSBlbWJlZGRpbmdzIGZvciBhbiBhcnJheSBvZiB0ZXh0cy5cbiAgICAgKiBAcGFyYW0gcmVxdWVzdCAtIEFuIG9iamVjdCB3aXRoIHByb3BlcnRpZXMgdG8gY29uZmlndXJlIHRoZSByZXF1ZXN0LlxuICAgICAqIEByZXR1cm5zIEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSByZXNwb25zZSBmcm9tIHRoZSBWb3lhZ2UgQUkgQVBJLlxuICAgICAqL1xuICAgIGFzeW5jIGVtYmVkZGluZ1dpdGhSZXRyeShyZXF1ZXN0KSB7XG4gICAgICAgIGNvbnN0IG1ha2VDb21wbGV0aW9uUmVxdWVzdCA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHVybCA9IGAke3RoaXMuYXBpVXJsfWA7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuYXBpS2V5fWAsXG4gICAgICAgICAgICAgICAgICAgIC4uLnRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHJlcXVlc3QpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgICAgcmV0dXJuIGpzb247XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB0aGlzLmNhbGxlci5jYWxsKG1ha2VDb21wbGV0aW9uUmVxdWVzdCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/dist/embeddings/voyage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/document_loaders/fs/pdf.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/document_loaders/fs/pdf.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PDFLoader: () => (/* reexport safe */ _dist_document_loaders_fs_pdf_js__WEBPACK_IMPORTED_MODULE_0__.PDFLoader)
/* harmony export */ });
/* harmony import */ var _dist_document_loaders_fs_pdf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dist/document_loaders/fs/pdf.js */ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/dist/document_loaders/fs/pdf.js");


/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/embeddings/voyage.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/embeddings/voyage.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VoyageEmbeddings: () => (/* reexport safe */ _dist_embeddings_voyage_js__WEBPACK_IMPORTED_MODULE_0__.VoyageEmbeddings)
/* harmony export */ });
/* harmony import */ var _dist_embeddings_voyage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/embeddings/voyage.js */ "(rsc)/./node_modules/.pnpm/@langchain+community@0.2.4_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_ope_4nxegwl55psvqblrhgw4gvlkia/node_modules/@langchain/community/dist/embeddings/voyage.js");


/***/ })

};
;