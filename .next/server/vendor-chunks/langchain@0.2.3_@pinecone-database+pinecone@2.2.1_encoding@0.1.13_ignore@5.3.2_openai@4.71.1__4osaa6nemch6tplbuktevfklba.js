"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba";
exports.ids = ["vendor-chunks/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/base.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/base.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseDocumentLoader: () => (/* reexport safe */ _langchain_core_document_loaders_base__WEBPACK_IMPORTED_MODULE_0__.BaseDocumentLoader)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_document_loaders_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/document_loaders/base */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.2.4_openai@4.71.1_encoding@0.1.13_zod@3.23.8_/node_modules/@langchain/core/document_loaders/base.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMi4zX0BwaW5lY29uZS1kYXRhYmFzZStwaW5lY29uZUAyLjIuMV9lbmNvZGluZ0AwLjEuMTNfaWdub3JlQDUuMy4yX29wZW5haUA0LjcxLjFfXzRvc2FhNm5lbWNoNnRwbGJ1a3RldmZrbGJhL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9kb2N1bWVudF9sb2FkZXJzL2Jhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWdhbC1zZW1hbnRpYy1zZWFyY2gvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMi4zX0BwaW5lY29uZS1kYXRhYmFzZStwaW5lY29uZUAyLjIuMV9lbmNvZGluZ0AwLjEuMTNfaWdub3JlQDUuMy4yX29wZW5haUA0LjcxLjFfXzRvc2FhNm5lbWNoNnRwbGJ1a3RldmZrbGJhL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9kb2N1bWVudF9sb2FkZXJzL2Jhc2UuanM/NzhkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL2RvY3VtZW50X2xvYWRlcnMvYmFzZVwiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/fs/buffer.js":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/fs/buffer.js ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BufferLoader: () => (/* binding */ BufferLoader)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/utils/env */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.2.4_openai@4.71.1_encoding@0.1.13_zod@3.23.8_/node_modules/@langchain/core/utils/env.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/base.js\");\n\n\n/**\n * Abstract class that extends the `BaseDocumentLoader` class. It\n * represents a document loader that loads documents from a buffer. The\n * `load()` method is implemented to read the buffer contents and metadata\n * based on the type of `filePathOrBlob`, and then calls the `parse()`\n * method to parse the buffer and return the documents.\n */\nclass BufferLoader extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseDocumentLoader {\n    constructor(filePathOrBlob) {\n        super();\n        Object.defineProperty(this, \"filePathOrBlob\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: filePathOrBlob\n        });\n    }\n    /**\n     * Method that reads the buffer contents and metadata based on the type of\n     * `filePathOrBlob`, and then calls the `parse()` method to parse the\n     * buffer and return the documents.\n     * @returns Promise that resolves with an array of `Document` objects.\n     */\n    async load() {\n        let buffer;\n        let metadata;\n        if (typeof this.filePathOrBlob === \"string\") {\n            const { readFile } = await BufferLoader.imports();\n            buffer = await readFile(this.filePathOrBlob);\n            metadata = { source: this.filePathOrBlob };\n        }\n        else {\n            buffer = await this.filePathOrBlob\n                .arrayBuffer()\n                .then((ab) => Buffer.from(ab));\n            metadata = { source: \"blob\", blobType: this.filePathOrBlob.type };\n        }\n        return this.parse(buffer, metadata);\n    }\n    /**\n     * Static method that imports the `readFile` function from the\n     * `fs/promises` module in Node.js. It is used to dynamically import the\n     * function when needed. If the import fails, it throws an error\n     * indicating that the `fs/promises` module is not available in the\n     * current environment.\n     * @returns Promise that resolves with an object containing the `readFile` function.\n     */\n    static async imports() {\n        try {\n            const { readFile } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:fs/promises */ \"node:fs/promises\", 19));\n            return { readFile };\n        }\n        catch (e) {\n            console.error(e);\n            throw new Error(`Failed to load fs/promises. TextLoader available only on environment 'node'. It appears you are running environment '${(0,_langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_0__.getEnv)()}'. See https://<link to docs> for alternatives.`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMi4zX0BwaW5lY29uZS1kYXRhYmFzZStwaW5lY29uZUAyLjIuMV9lbmNvZGluZ0AwLjEuMTNfaWdub3JlQDUuMy4yX29wZW5haUA0LjcxLjFfXzRvc2FhNm5lbWNoNnRwbGJ1a3RldmZrbGJhL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9kb2N1bWVudF9sb2FkZXJzL2ZzL2J1ZmZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUQ7QUFDSDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQix3REFBa0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixXQUFXO0FBQy9CO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsV0FBVyxRQUFRLHNJQUEwQjtBQUNqRSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0Esb0pBQW9KLGlFQUFNLEdBQUc7QUFDN0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVnYWwtc2VtYW50aWMtc2VhcmNoLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjIuM19AcGluZWNvbmUtZGF0YWJhc2UrcGluZWNvbmVAMi4yLjFfZW5jb2RpbmdAMC4xLjEzX2lnbm9yZUA1LjMuMl9vcGVuYWlANC43MS4xX180b3NhYTZuZW1jaDZ0cGxidWt0ZXZma2xiYS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvZG9jdW1lbnRfbG9hZGVycy9mcy9idWZmZXIuanM/YTczMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFbnYgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3V0aWxzL2VudlwiO1xuaW1wb3J0IHsgQmFzZURvY3VtZW50TG9hZGVyIH0gZnJvbSBcIi4uL2Jhc2UuanNcIjtcbi8qKlxuICogQWJzdHJhY3QgY2xhc3MgdGhhdCBleHRlbmRzIHRoZSBgQmFzZURvY3VtZW50TG9hZGVyYCBjbGFzcy4gSXRcbiAqIHJlcHJlc2VudHMgYSBkb2N1bWVudCBsb2FkZXIgdGhhdCBsb2FkcyBkb2N1bWVudHMgZnJvbSBhIGJ1ZmZlci4gVGhlXG4gKiBgbG9hZCgpYCBtZXRob2QgaXMgaW1wbGVtZW50ZWQgdG8gcmVhZCB0aGUgYnVmZmVyIGNvbnRlbnRzIGFuZCBtZXRhZGF0YVxuICogYmFzZWQgb24gdGhlIHR5cGUgb2YgYGZpbGVQYXRoT3JCbG9iYCwgYW5kIHRoZW4gY2FsbHMgdGhlIGBwYXJzZSgpYFxuICogbWV0aG9kIHRvIHBhcnNlIHRoZSBidWZmZXIgYW5kIHJldHVybiB0aGUgZG9jdW1lbnRzLlxuICovXG5leHBvcnQgY2xhc3MgQnVmZmVyTG9hZGVyIGV4dGVuZHMgQmFzZURvY3VtZW50TG9hZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihmaWxlUGF0aE9yQmxvYikge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJmaWxlUGF0aE9yQmxvYlwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogZmlsZVBhdGhPckJsb2JcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0aGF0IHJlYWRzIHRoZSBidWZmZXIgY29udGVudHMgYW5kIG1ldGFkYXRhIGJhc2VkIG9uIHRoZSB0eXBlIG9mXG4gICAgICogYGZpbGVQYXRoT3JCbG9iYCwgYW5kIHRoZW4gY2FsbHMgdGhlIGBwYXJzZSgpYCBtZXRob2QgdG8gcGFyc2UgdGhlXG4gICAgICogYnVmZmVyIGFuZCByZXR1cm4gdGhlIGRvY3VtZW50cy5cbiAgICAgKiBAcmV0dXJucyBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhbiBhcnJheSBvZiBgRG9jdW1lbnRgIG9iamVjdHMuXG4gICAgICovXG4gICAgYXN5bmMgbG9hZCgpIHtcbiAgICAgICAgbGV0IGJ1ZmZlcjtcbiAgICAgICAgbGV0IG1ldGFkYXRhO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuZmlsZVBhdGhPckJsb2IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcmVhZEZpbGUgfSA9IGF3YWl0IEJ1ZmZlckxvYWRlci5pbXBvcnRzKCk7XG4gICAgICAgICAgICBidWZmZXIgPSBhd2FpdCByZWFkRmlsZSh0aGlzLmZpbGVQYXRoT3JCbG9iKTtcbiAgICAgICAgICAgIG1ldGFkYXRhID0geyBzb3VyY2U6IHRoaXMuZmlsZVBhdGhPckJsb2IgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGJ1ZmZlciA9IGF3YWl0IHRoaXMuZmlsZVBhdGhPckJsb2JcbiAgICAgICAgICAgICAgICAuYXJyYXlCdWZmZXIoKVxuICAgICAgICAgICAgICAgIC50aGVuKChhYikgPT4gQnVmZmVyLmZyb20oYWIpKTtcbiAgICAgICAgICAgIG1ldGFkYXRhID0geyBzb3VyY2U6IFwiYmxvYlwiLCBibG9iVHlwZTogdGhpcy5maWxlUGF0aE9yQmxvYi50eXBlIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2UoYnVmZmVyLCBtZXRhZGF0YSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXRpYyBtZXRob2QgdGhhdCBpbXBvcnRzIHRoZSBgcmVhZEZpbGVgIGZ1bmN0aW9uIGZyb20gdGhlXG4gICAgICogYGZzL3Byb21pc2VzYCBtb2R1bGUgaW4gTm9kZS5qcy4gSXQgaXMgdXNlZCB0byBkeW5hbWljYWxseSBpbXBvcnQgdGhlXG4gICAgICogZnVuY3Rpb24gd2hlbiBuZWVkZWQuIElmIHRoZSBpbXBvcnQgZmFpbHMsIGl0IHRocm93cyBhbiBlcnJvclxuICAgICAqIGluZGljYXRpbmcgdGhhdCB0aGUgYGZzL3Byb21pc2VzYCBtb2R1bGUgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGVcbiAgICAgKiBjdXJyZW50IGVudmlyb25tZW50LlxuICAgICAqIEByZXR1cm5zIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSBgcmVhZEZpbGVgIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIHN0YXRpYyBhc3luYyBpbXBvcnRzKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyByZWFkRmlsZSB9ID0gYXdhaXQgaW1wb3J0KFwibm9kZTpmcy9wcm9taXNlc1wiKTtcbiAgICAgICAgICAgIHJldHVybiB7IHJlYWRGaWxlIH07XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBsb2FkIGZzL3Byb21pc2VzLiBUZXh0TG9hZGVyIGF2YWlsYWJsZSBvbmx5IG9uIGVudmlyb25tZW50ICdub2RlJy4gSXQgYXBwZWFycyB5b3UgYXJlIHJ1bm5pbmcgZW52aXJvbm1lbnQgJyR7Z2V0RW52KCl9Jy4gU2VlIGh0dHBzOi8vPGxpbmsgdG8gZG9jcz4gZm9yIGFsdGVybmF0aXZlcy5gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/fs/buffer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/fs/directory.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/fs/directory.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DirectoryLoader: () => (/* binding */ DirectoryLoader),\n/* harmony export */   UnknownHandling: () => (/* binding */ UnknownHandling)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/utils/env */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.2.4_openai@4.71.1_encoding@0.1.13_zod@3.23.8_/node_modules/@langchain/core/utils/env.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/base.js\");\n\n\n// TypeScript enums are not tree-shakeable, so doing this instead\n// See https://bargsten.org/jsts/enums/\nconst UnknownHandling = {\n    Ignore: \"ignore\",\n    Warn: \"warn\",\n    Error: \"error\",\n};\n/**\n * A document loader that loads documents from a directory. It extends the\n * `BaseDocumentLoader` class and implements the `load()` method.\n * @example\n * ```typescript\n *\n * const directoryLoader = new DirectoryLoader(\n *   \"src/document_loaders/example_data/\",\n *   {\n *     \".pdf\": (path: string) => new PDFLoader(path),\n *   },\n * );\n *\n * const docs = await directoryLoader.load();\n * console.log({ docs });\n *\n * ```\n */\nclass DirectoryLoader extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseDocumentLoader {\n    constructor(directoryPath, loaders, recursive = true, unknown = UnknownHandling.Warn) {\n        super();\n        Object.defineProperty(this, \"directoryPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: directoryPath\n        });\n        Object.defineProperty(this, \"loaders\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: loaders\n        });\n        Object.defineProperty(this, \"recursive\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: recursive\n        });\n        Object.defineProperty(this, \"unknown\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: unknown\n        });\n        if (Object.keys(loaders).length === 0) {\n            throw new Error(\"Must provide at least one loader\");\n        }\n        for (const extension in loaders) {\n            if (Object.hasOwn(loaders, extension)) {\n                if (extension[0] !== \".\") {\n                    throw new Error(`Extension must start with a dot: ${extension}`);\n                }\n            }\n        }\n    }\n    /**\n     * Loads the documents from the directory. If a file is a directory and\n     * `recursive` is `true`, it recursively loads documents from the\n     * subdirectory. If a file is a file, it checks if there is a\n     * corresponding loader function for the file extension in the `loaders`\n     * mapping. If there is, it loads the documents. If there is no\n     * corresponding loader function and `unknown` is set to `Warn`, it logs a\n     * warning message. If `unknown` is set to `Error`, it throws an error.\n     * @returns A promise that resolves to an array of loaded documents.\n     */\n    async load() {\n        const { readdir, extname, resolve } = await DirectoryLoader.imports();\n        const files = await readdir(this.directoryPath, { withFileTypes: true });\n        const documents = [];\n        for (const file of files) {\n            const fullPath = resolve(this.directoryPath, file.name);\n            if (file.isDirectory()) {\n                if (this.recursive) {\n                    const loader = new DirectoryLoader(fullPath, this.loaders, this.recursive, this.unknown);\n                    documents.push(...(await loader.load()));\n                }\n            }\n            else {\n                // I'm aware some things won't be files,\n                // but they will be caught by the \"unknown\" handling below.\n                const loaderFactory = this.loaders[extname(file.name)];\n                if (loaderFactory) {\n                    const loader = loaderFactory(fullPath);\n                    documents.push(...(await loader.load()));\n                }\n                else {\n                    switch (this.unknown) {\n                        case UnknownHandling.Ignore:\n                            break;\n                        case UnknownHandling.Warn:\n                            console.warn(`Unknown file type: ${file.name}`);\n                            break;\n                        case UnknownHandling.Error:\n                            throw new Error(`Unknown file type: ${file.name}`);\n                        default:\n                            throw new Error(`Unknown unknown handling: ${this.unknown}`);\n                    }\n                }\n            }\n        }\n        return documents;\n    }\n    /**\n     * Imports the necessary functions from the `node:path` and\n     * `node:fs/promises` modules. It is used to dynamically import the\n     * functions when needed. If the import fails, it throws an error\n     * indicating that the modules failed to load.\n     * @returns A promise that resolves to an object containing the imported functions.\n     */\n    static async imports() {\n        try {\n            const { extname, resolve } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:path */ \"node:path\", 19));\n            const { readdir } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:fs/promises */ \"node:fs/promises\", 19));\n            return { readdir, extname, resolve };\n        }\n        catch (e) {\n            console.error(e);\n            throw new Error(`Failed to load fs/promises. DirectoryLoader available only on environment 'node'. It appears you are running environment '${(0,_langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_0__.getEnv)()}'. See https://<link to docs> for alternatives.`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/fs/directory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/document_loaders/fs/buffer.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/document_loaders/fs/buffer.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BufferLoader: () => (/* reexport safe */ _dist_document_loaders_fs_buffer_js__WEBPACK_IMPORTED_MODULE_0__.BufferLoader)
/* harmony export */ });
/* harmony import */ var _dist_document_loaders_fs_buffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dist/document_loaders/fs/buffer.js */ "(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/fs/buffer.js");


/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/document_loaders/fs/directory.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/document_loaders/fs/directory.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DirectoryLoader: () => (/* reexport safe */ _dist_document_loaders_fs_directory_js__WEBPACK_IMPORTED_MODULE_0__.DirectoryLoader),
/* harmony export */   UnknownHandling: () => (/* reexport safe */ _dist_document_loaders_fs_directory_js__WEBPACK_IMPORTED_MODULE_0__.UnknownHandling)
/* harmony export */ });
/* harmony import */ var _dist_document_loaders_fs_directory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dist/document_loaders/fs/directory.js */ "(rsc)/./node_modules/.pnpm/langchain@0.2.3_@pinecone-database+pinecone@2.2.1_encoding@0.1.13_ignore@5.3.2_openai@4.71.1__4osaa6nemch6tplbuktevfklba/node_modules/langchain/dist/document_loaders/fs/directory.js");


/***/ })

};
;